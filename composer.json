{
    "name": "laravel/laravel",
    "type": "project",
    "description": "The Laravel Framework.",
    "keywords": [
        "framework",
        "laravel"
    ],
    "license": "MIT",
    "require": {
        "php": "^7.4",
        "ext-json": "*",
        "ext-zip": "*",
        "enlightn/enlightn": "^1.7",
        "fideloper/proxy": "^4.2",
        "fruitcake/laravel-cors": "^2.0",
        "guzzlehttp/guzzle": "^7.2",
        "inertiajs/inertia-laravel": "^0.3.1",
        "laravel/framework": "^8.0",
        "laravel/jetstream": "^2.2.3",
        "laravel/sanctum": "^2.6",
        "laravel/tinker": "^2.0",
        "spatie/laravel-permission": "^3.17"
    },
    "require-dev": {
        "barryvdh/laravel-debugbar": "^3.5",
        "barryvdh/laravel-ide-helper": "^2.8",
        "facade/ignition": "^2.4.1",
        "fzaninotto/faker": "^1.9.1",
        "laravel/dusk": "^6.11",
        "laravel/telescope": "^4.0",
        "mockery/mockery": "^1.4.2",
        "nunomaduro/collision": "^5.0",
        "nunomaduro/phpinsights": "^1.14",
        "phpunit/phpunit": "^9.4",
        "roave/security-advisories": "dev-latest",
        "staudenmeir/dusk-updater": "^1.2"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "laravel": {
            "dont-discover": [
                "laravel/telescope"
            ]
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "check:env": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "keygen": [
            "@php artisan key:generate --ansi",
            "node -e \"require('node-notifier').notify({title: 'Crypto Key Changed!', message: 'Ran artisan key:generate, watch out if you plan to use an existing db.', sound: true})\""
        ],
        "post-root-package-install": [
            "@check:env"
        ],
        "post-create-project-cmd": [
            "@keygen"
        ],
        "post-install-cmd": [
            "Illuminate\\Foundation\\ComposerScripts::postInstall",
            "@check:env"
        ],
        "post-update-cmd": [
            "Illuminate\\Foundation\\ComposerScripts::postUpdate",
            "@check:env"
        ],
        "notify": [
            "node -e \"require('node-notifier').notify({title: 'The cake was a lie!', message: 'I am cross-platform notification', icon: path.join(__dirname, 'resources/img/success.jpg'), sound: true})\""
        ],
        "fresh": [
            "@composer install",
            "@keygen",
            "@ide",
            "@mfs"
        ],
        "mfs": [
            "@php artisan migrate:fresh --seed",
            "node -e \"require('node-notifier').notify({title: 'Fresh Data Delivered!', message: 'Your database was reset and fresh data was seeded'})\""
        ],
        "reset": [
            "rm -f composer.lock",
            "@fresh",
            "node -e \"require('node-notifier').notify({title: 'Reset Complete!', message: 'Your local project setup was fully reset', icon: path.join(__dirname, 'resources/img/success.jpg'), sound: true})\""
        ],
        "reset:full": [
            "rm -rf vendor/*/",
            "@reset"
        ],
        "ide": [
            "@php artisan ide-helper:eloquent",
            "@php artisan ide-helper:generate",
            "@php artisan ide-helper:meta"
        ],
        "ide:models": [
            "@php artisan ide-helper:models -W"
        ],
        "ide:full": [
            "@ide",
            "@ide:models"
        ],
        "routes":
        [
          "@php artisan route:list --columns=name,uri,method"
        ]
    }
}
